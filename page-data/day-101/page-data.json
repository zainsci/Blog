{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-101/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"844b4db5-9b32-5167-882e-2cc1b3a3bfa0","excerpt":"We know Main memory of a system is limited and often not enough for all the programs to exist at the same time. So in order to deal with this we swap in and outâ€¦","html":"<p>We know Main memory of a system is limited and often not enough for all the programs to exist at the same time. So in order to deal with this we swap in and out programs from the memory. This is called Swapping.</p>\n<h2>Swapping</h2>\n<p>A process can not be executed when it is not completely or partially in the main memory. A process that is not being executed by the CPU can be <strong>swapped out</strong> of the memory to a backing storage like a hard drive or a solid-state drive for freeing the memory for other processes to take.</p>\n<p>A process which is being executed or will be executed can also be <strong>swapped in</strong> to the memory. <strong>Swapping</strong> is a technique that is used to swap processes into the main memory to execute them and swaps out the processes when they are not being executed or when required.</p>\n<p>The swapping is done by the <strong>swapper</strong>. Consider that the dispatcher tries to load a process to CPU to execute but the process is not in the memory. It will call the swapper to swap the process in the memory and if there is not enough space, swap out some of the processes.</p>\n<h3>Benefits Of Swapping</h3>\n<p>Following are some benefits of swapping.</p>\n<ul>\n<li>It allows higher degree of multiprogramming.</li>\n<li>It allows dynamic reloaction.</li>\n<li>It provides better memory utilization.</li>\n<li>It can be applied on priority based scheduling algorithms to improve performance.</li>\n</ul>","frontmatter":{"title":"Day 101 - Swapping In Memory","date":"April 11, 2021","description":null,"tags":["Operating-Systems"]}},"previous":{"fields":{"slug":"/day-100/"},"frontmatter":{"title":"Day 100 - Loading And Linking"}},"next":{"fields":{"slug":"/day-102/"},"frontmatter":{"title":"Day 102 - Memory Allocation Methods"}}},"pageContext":{"id":"844b4db5-9b32-5167-882e-2cc1b3a3bfa0","previousPostId":"53585a5e-1efe-54ca-b9f8-4684b2b71c37","nextPostId":"e8d32829-b65f-598d-a0de-f8deaa8b8bd4"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}