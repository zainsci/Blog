{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-37/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"f45d9816-6dba-59b4-be3f-045d40481966","excerpt":"This is the sixth post in the Linux series and it will be about Users and Permissions in Linux. But first of all what are users and permissions in Linux? Whatâ€¦","html":"<p>This is the sixth post in the Linux series and it will be about Users and Permissions in Linux. But first of all what are users and permissions in Linux?</p>\n<h2>What are Users in Linux?</h2>\n<p>Linux OS provides the ability of multitasking and management of task by more than one user at a time. It was designed to work with multiple users working at the same System at the same time. Other OS like Windows does not allows more than one user to work at the same time. So in order to make it work properly and for security reasons Users are created in the Linux with limited privillages to perform multitasking.</p>\n<p>Each user has a set of permissions. What things that they can access in the system is defined in the permissions that are allowed to them by the admin/root user. An admin user has all the access permissions on the system and they can do anything they want with the system like deleting everything in the system. So for security purposes it is necessary to create users with limited access that they need to perform the work that is required of them and not access anything else.</p>\n<p>Many System Admins create a user for themselves with limited permissions to not accidently damage any file that require root access. Now to permissions.</p>\n<h2>What are permissions?</h2>\n<p>Permissions or access rights are measures that control the ability of the user to create, modify, execute or navigate the file/directories in the file system. Basic permissions are follwoing.</p>\n<ul>\n<li>Create - the permission for a user to create files.</li>\n<li>Modify - the permission for a user to make a change or delete a file.</li>\n<li>Execute - the permission to execute any files they want.</li>\n<li>Navigate - the permission to naveigate to any directory of choice and views contents in them.</li>\n</ul>\n<h3>Creaing User in Linux</h3>\n<p>To create a new user in Linux <code class=\"language-text\">useradd</code> command is used. Type <code class=\"language-text\">useradd</code> followed by the name of the user and hit enter and it will create the user.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:/$ <span class=\"token function\">useradd</span> new-user</code></pre></div>\n<p>All the users that are created or were created by the system are stored in <code class=\"language-text\">/etc/passwd</code>. Now run the <code class=\"language-text\">cat</code> command with <code class=\"language-text\">/etc/passwd</code> and it will print out all the users with the newly created user at the last.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:/$ <span class=\"token function\">cat</span> /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.\nnew-user:x:1000:1000::/home/new-user:/bin/sh</code></pre></div>\n<p>You may need root access if you are not logged in as the admin to create a user. <code class=\"language-text\">useradd</code> command also accepts some options to add to the new user like adding expiry date for the user of creating home directory for the user to login to.</p>\n<p>There is also another command that is easier for people that are new to Linux to create users. It is <code class=\"language-text\">adduser</code> command. It create the defualt home dir for other necessary things for a new user that you have to do manually when creating a user with <code class=\"language-text\">useradd</code> command. It works same as the first command.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:/$ adduser another-new-user\nAdding user <span class=\"token variable\"><span class=\"token variable\">`</span>another-new-user' <span class=\"token punctuation\">..</span>.\nAdding new group <span class=\"token variable\">`</span></span>another-new-user<span class=\"token string\">' (1001) ...\nAdding new user <span class=\"token variable\"><span class=\"token variable\">`</span>another-new-user' <span class=\"token punctuation\">(</span><span class=\"token number\">1001</span><span class=\"token punctuation\">)</span> with group <span class=\"token variable\">`</span></span>another-new-user'</span> <span class=\"token punctuation\">..</span>.\nCreating home directory <span class=\"token variable\"><span class=\"token variable\">`</span>/home/another-new-user' <span class=\"token punctuation\">..</span>.\nCopying files from <span class=\"token variable\">`</span></span>/etc/skel' <span class=\"token punctuation\">..</span>.\nNew password:\nRetype new password:\npasswd: password updated successfully\nChanging the user information <span class=\"token keyword\">for</span> another-new-user\nEnter the new value, or press ENTER <span class=\"token keyword\">for</span> the default\n        Full Name <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>: New User\n        Room Number <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>: New User Room Number\n        Work Phone <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>: New User Work Number\n        Home Phone <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>: New User Phone Number\n        Other <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>: Others\nIs the information correct? <span class=\"token punctuation\">[</span>Y/n<span class=\"token punctuation\">]</span> Y</code></pre></div>\n<p>You see that it will ask some questions about the newly created user and assigns it to a new group by itself. All these things you have to do manually if created with <code class=\"language-text\">useradd</code> command.</p>\n<h3>Deleting a User</h3>\n<p>To delete a user first you need to have admin access and them type <code class=\"language-text\">deluser</code> command with users name as the arugment.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:/$ deluser new-user</code></pre></div>\n<h3>Setting password for the newuser</h3>\n<p>To setup a password for the newuser type <code class=\"language-text\">passwd</code> command with users name as the argument and hit enter and it will ask you for the password. When typing password it will not show how many words are typed as they do in the browser and so be careful when typing the password.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:/$ <span class=\"token function\">passwd</span> new-user\nNew password:\nRetype new password:\npasswd: password updated successfully\nroot@User:/$</code></pre></div>\n<p>Thats it for today and next will be about groups and adding permissions to the users and assigning users to the group.</p>","frontmatter":{"title":"Day 37 - Users and Permissions in Linux","date":"February 06, 2021","description":null}},"previous":{"fields":{"slug":"/day-36/"},"frontmatter":{"title":"Day 36 - Finding and Filtering in Linux"}},"next":null},"pageContext":{"id":"f45d9816-6dba-59b4-be3f-045d40481966","previousPostId":"24b4275f-c345-5cc8-9488-de48bf57be87","nextPostId":null}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}