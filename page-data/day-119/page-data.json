{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-119/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"040dd718-1af8-50ff-a41b-0050815362c7","excerpt":"Before we learn any more about the Rust Syntax there is one more thing that we should learn about and that is the Cargo Compiler that also comes with the  thatâ€¦","html":"<p>Before we learn any more about the Rust Syntax there is one more thing that we should learn about and that is the Cargo Compiler that also comes with the <code class=\"language-text\">rustc</code> that we use to compile the Rust program. But whats the difference between <code class=\"language-text\">rustc</code> and <code class=\"language-text\">cargo</code>. The short answer is that the <code class=\"language-text\">rustc</code> is used to compile programs that are small and often are only one to some files big.</p>\n<p>On the other hand, If you want to code a big project which also require some external packages in the production, then you need to learn about the cargo compiler.</p>\n<h3>Cargo</h3>\n<p>Well actually cargo is not a compiler but a build system and a package manager just like <code class=\"language-text\">pip</code> in Python and <code class=\"language-text\">npm</code> in NodeJs. It handles many things for you like compiling your projects and downloading dependency packages for you from the web on which your project relies on and so on. To start with cargo first check if have it installed on your system.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Linux<span class=\"token operator\">>></span> cargo --version\ncargo <span class=\"token number\">1.51</span>.0 <span class=\"token punctuation\">(</span>43b129a20 <span class=\"token number\">2021</span>-03-16<span class=\"token punctuation\">)</span></code></pre></div>\n<p>After that lets create a new project with cargo and to do that we run cargo with <code class=\"language-text\">new &lt;project_name&gt;</code> as the arguments to it and it will creat the following files for us.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Linux<span class=\"token operator\">>></span> cargo new rust_hello\nCreated binary <span class=\"token punctuation\">(</span>application<span class=\"token punctuation\">)</span> <span class=\"token variable\"><span class=\"token variable\">`</span>rust_hello<span class=\"token variable\">`</span></span> package\nLinux<span class=\"token operator\">>></span> <span class=\"token builtin class-name\">cd</span> rust_hello\nLinux<span class=\"token operator\">>></span> <span class=\"token function\">ls</span>\n.gitignore      Cargo.toml      /src</code></pre></div>\n<p>In the <code class=\"language-text\">/src</code> directory it holds all your rust files and currently it only has one file called <code class=\"language-text\">main.rs</code> and in <code class=\"language-text\">Cargo.toml</code> is where you specifiy the metadata for your project.</p>\n<h3>Cargo.toml</h3>\n<p>If you open Cargo.toml file now it should look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">package</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"rust_hello\"</span>\n<span class=\"token key property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.1.0\"</span>\n<span class=\"token key property\">authors</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"zainsci &lt;60652827+zainsci@users.noreply.github.com>\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">edition</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"2018\"</span>\n\n<span class=\"token comment\"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">dependencies</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Here under the <code class=\"language-text\">[package]</code> is all the info about your project and under the <code class=\"language-text\">[dependencies]</code> you specify what packages you are using in your project.</p>\n<h3>Crates</h3>\n<p>Inside the Cargo.toml file and under the <code class=\"language-text\">[dependencies]</code> we write down the package name in Rust we call them crates and the cargo will download it when we run the command <code class=\"language-text\">cargo run</code>. It works just like <code class=\"language-text\">pip</code> in Python and <code class=\"language-text\">npm</code> in NodeJs.</p>\n<p>You first look for crates in the crates repository on the <a href=\"https://create.io\">Official Website</a>. You look for what crate you want to use in your project, you look for install section and find the name and version no that they specified, copy it and then write down it in the Cargo.toml file just like i did below.</p>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">rand</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.7.3\"</span></code></pre></div>\n<p>Now i can start using the <code class=\"language-text\">rand</code> crate in our project.</p>\n<h3>Importing Crate In Our Projects</h3>\n<p>Importing modules in our file is just like you would do it in any other language. We use <code class=\"language-text\">use</code> keyword followed by the <code class=\"language-text\">&lt;crate_name&gt;::prelude::*;</code> and thats it.</p>\n<p>We use the rand crate to generate a random number like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"rs\"><pre class=\"language-rs\"><code class=\"language-rs\">use rand::prelude::*;\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let random: u8 = random.gen();\n\n\n    println!(&quot;Random Number: {}&quot;, random)\n}</code></pre></div>\n<h3>Running Cargo</h3>\n<p>Now that we have coded our project and want to compile it and see the result all we have to do is run the <code class=\"language-text\">cargo run</code> command in the terminal and it will automatically run the compiled program for us.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Linux<span class=\"token operator\">>></span> cargo run\n    Compiling playground v0.0.1 <span class=\"token punctuation\">(</span>/playground<span class=\"token punctuation\">)</span>\n     Finished dev <span class=\"token punctuation\">[</span>unoptimized + debuginfo<span class=\"token punctuation\">]</span> target<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span>.02s\n      Running <span class=\"token variable\"><span class=\"token variable\">`</span>target/debug/playground<span class=\"token variable\">`</span></span>\n<span class=\"token number\">238</span></code></pre></div>\n<p>Hope we learnd about what cargo is and how to work with it. Next time we will be taking a look at Rust Control FLow Statements like Loops and Ifs and Else.</p>","frontmatter":{"title":"Day 119 - Cargo Build System In Rust","date":"April 29, 2021","description":null,"tags":["Rust","Programming-Langauge"]}},"previous":{"fields":{"slug":"/day-118/"},"frontmatter":{"title":"Day 118 - Ownership & Borrowing In Rust"}},"next":{"fields":{"slug":"/day-120/"},"frontmatter":{"title":"Day 120 - Control Flow In Rust"}}},"pageContext":{"id":"040dd718-1af8-50ff-a41b-0050815362c7","previousPostId":"f1ed0d63-7146-5f3d-a023-cbaaef03c238","nextPostId":"f0d91280-de2a-55c8-a24e-62b4b72ca3f7"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}