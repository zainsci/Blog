{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-40/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"90c3d40c-c5ae-56d0-bfdf-00bb392daa6f","excerpt":"Last eight posts were all about the basics of Linux, working with the command-line, handling User, Groups and Files and Permissions and all other things thatâ€¦","html":"<p>Last eight posts were all about the basics of Linux, working with the command-line, handling User, Groups and Files and Permissions and all other things that you need to know to work with Linux. Starting from today I will be learning Networking in Linux and most the useful networking tools Like nmap etc. I already have wrote a series on Nerworking Basics from Day24 to Day31 which you can be found on <a href=\"/blog/tag/networking\">This Page</a>. Now to networking in Linux.</p>\n<h2>Analyzing the Network</h2>\n<p>To analyze the current active network interfaces on your local network <code class=\"language-text\">ifconfig</code> command is used. <code class=\"language-text\">ifconfig</code> command displays the status of the current active network interfaces. Running this command on the terminal will print out the following results.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ <span class=\"token function\">ifconfig</span></code></pre></div>\n<p>ifconfig is just showing two interfaces here, one eth0 and the other lo. eth0 means Ethernet0 and it is the first network connection to the Linux and the second is the lo which is called the loopback address or localhost.</p>\n<p>Ethernet0 (0 becasue Linux counts fron 0) is the physical connection to the network via a switch or a home router. lo is a special address that is used for local development and testing on the device. It is represented by either simply localhost as the domain or the IP address 127.0.0.1.</p>\n<p>ifconfig can show other interfaces too if they are connected to the device. For example if there is a Wireless adapter connected to your deivce for connection to the WiFi it will show an interface named wlan0 and details about it. ifconfig can do much more stuff than just showing network interfaces like changing your IP address.</p>\n<h3>Changing IP address</h3>\n<p>To change the IP address of your network interface type ipconfig with network interface name and the IP address you want.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ <span class=\"token function\">ifconfig</span>\neth0: inet <span class=\"token number\">192.168</span>.81.100 <span class=\"token punctuation\">..</span>.\n      <span class=\"token punctuation\">..</span>.\nroot@User:~$ <span class=\"token function\">ifconfig</span> eth0 <span class=\"token number\">192.168</span>.80.200\nroot@User:~$ <span class=\"token function\">ifconfig</span>\neth0: inet <span class=\"token number\">192.168</span>.80.200 <span class=\"token punctuation\">..</span>.\n      <span class=\"token punctuation\">..</span>.</code></pre></div>\n<h2>Ping a Network</h2>\n<p>This command <code class=\"language-text\">ping</code> is a simple command that send packets to domain or IP address provided as the argument to check if it recceives response from the target address to see wether the target is online or not.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ <span class=\"token function\">ping</span> google.com\n\nPinging google.com <span class=\"token punctuation\">[</span><span class=\"token number\">172.217</span>.19.174<span class=\"token punctuation\">]</span> with <span class=\"token number\">32</span> bytes of data:\nReply from <span class=\"token number\">172.217</span>.19.174: <span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span>193ms <span class=\"token assign-left variable\">TTL</span><span class=\"token operator\">=</span><span class=\"token number\">118</span>\nReply from <span class=\"token number\">172.217</span>.19.174: <span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span>77ms <span class=\"token assign-left variable\">TTL</span><span class=\"token operator\">=</span><span class=\"token number\">118</span>\nReply from <span class=\"token number\">172.217</span>.19.174: <span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span>77ms <span class=\"token assign-left variable\">TTL</span><span class=\"token operator\">=</span><span class=\"token number\">118</span>\nReply from <span class=\"token number\">172.217</span>.19.174: <span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span>77ms <span class=\"token assign-left variable\">TTL</span><span class=\"token operator\">=</span><span class=\"token number\">118</span>\n\nPing statistics <span class=\"token keyword\">for</span> <span class=\"token number\">172.217</span>.19.174:\n    Packets: Sent <span class=\"token operator\">=</span> <span class=\"token number\">4</span>, Received <span class=\"token operator\">=</span> <span class=\"token number\">4</span>, Lost <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>% loss<span class=\"token punctuation\">)</span>,\nApproximate round trip <span class=\"token builtin class-name\">times</span> <span class=\"token keyword\">in</span> milli-seconds:\n    Minimum <span class=\"token operator\">=</span> 77ms, Maximum <span class=\"token operator\">=</span> 193ms, Average <span class=\"token operator\">=</span> 106ms</code></pre></div>\n<h2>CURL</h2>\n<p>CURL command allows a user to send requests and data to a web server. Generally it is used for testing purposes. For example if typed in the command line with <code class=\"language-text\">google.com</code> it will output the following respone sent by the <code class=\"language-text\">google.com</code> server.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ <span class=\"token function\">curl</span> google.com\n\n<span class=\"token operator\">&lt;</span>HTML<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>HEAD<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>meta http-equiv<span class=\"token operator\">=</span><span class=\"token string\">\"content-type\"</span> <span class=\"token assign-left variable\">content</span><span class=\"token operator\">=</span><span class=\"token string\">\"text/html;charset=utf-8\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>TITLE<span class=\"token operator\">></span><span class=\"token number\">301</span> Moved<span class=\"token operator\">&lt;</span>/TITLE<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/HEAD<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>BODY<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>H<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span><span class=\"token number\">301</span> Moved<span class=\"token operator\">&lt;</span>/H<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>\nThe document has moved\n<span class=\"token operator\">&lt;</span>A <span class=\"token assign-left variable\">HREF</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://www.google.com/\"</span><span class=\"token operator\">></span>here<span class=\"token operator\">&lt;</span>/A<span class=\"token operator\">></span>.\n<span class=\"token operator\">&lt;</span>/BODY<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/HTML<span class=\"token operator\">></span></code></pre></div>\n<p>Google sent the response document HTML for the request to <code class=\"language-text\">google.com</code> which is a referrel to the https version of the the domain <code class=\"language-text\">https://www.google.com/</code>. and if we sent the curl request to the full domain it will send full HTML page that you see in the browser as the response for the request.</p>\n<p>But these are just simply the GET request how can we send POST request with it and send data.</p>\n<h3>POST request with CURL</h3>\n<p>To send a POST request with the curl, we use <code class=\"language-text\">-X</code> switch with <code class=\"language-text\">POST</code> as the value for it.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ <span class=\"token function\">curl</span> -X https://www.google.com\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span>en<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span>utf-<span class=\"token operator\"><span class=\"token file-descriptor important\">8</span>></span>\n    <span class=\"token punctuation\">..</span>.\n    <span class=\"token punctuation\">..</span>.\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Error <span class=\"token number\">405</span> <span class=\"token punctuation\">(</span>Mrthod Not ALlowed<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&lt;</span>/title<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div>\n<p>Sending the POST request to Google will result in error as the Search Page will not accept any. That was just done to explain how to send the POST request.</p>\n<h3>Sending the data with CURL</h3>\n<p>To send the data like doing it on the web when logging into an account and entering the username and other stuff but here with curl and POST request, we use <code class=\"language-text\">-d</code> switch.Here <strong>d</strong> is for data and after the switch we add data into key=value format.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ <span class=\"token function\">curl</span> -X POST -d <span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span>something <span class=\"token assign-left variable\">key</span><span class=\"token operator\">=</span>value https://www.google.com\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span>en<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span>utf-<span class=\"token operator\"><span class=\"token file-descriptor important\">8</span>></span>\n    <span class=\"token punctuation\">..</span>.\n    <span class=\"token punctuation\">..</span>.\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Error <span class=\"token number\">405</span> <span class=\"token punctuation\">(</span>Mrthod Not ALlowed<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&lt;</span>/title<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div>\n<p>Again we will see the same response and also you shouldnâ€™t send any data to any website as long as you understand what you are doing and to whon you are sending this data to.</p>","frontmatter":{"title":"Day 40 - Networking in Linux","date":"February 09, 2021","description":null}},"previous":{"fields":{"slug":"/day-39/"},"frontmatter":{"title":"Day 39 - File Permissions in Linux"}},"next":null},"pageContext":{"id":"90c3d40c-c5ae-56d0-bfdf-00bb392daa6f","previousPostId":"da22f3e1-49f9-54a2-abe9-ffdc08d37181","nextPostId":null}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}