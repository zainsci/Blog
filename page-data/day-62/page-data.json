{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-62/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"bd9ba5ee-fdbe-50bf-b33a-dc26ed8dd193","excerpt":"Last day I learned Dijkstra’s Algorithm and today I learned two algorithms in the college which are not the kind of algorthms that I have learned so far like…","html":"<p>Last day I learned Dijkstra’s Algorithm and today I learned two algorithms in the college which are not the kind of algorthms that I have learned so far like sorting or searching one but these are the algorithms that are used in the OS design and are simple and easy to implement.</p>\n<p>As every CS student one day learn about the OS I too am learning about Operating Systems now a days in college and today I came along these algorithms that are called Page Replacement Algorithms but what are these?</p>\n<h2>Page Replacement Algorithms</h2>\n<p>Page Replacement Algorithms are the algorithms that are used to decide what memory pages to swap in and out of the Virtual Memory. These algorithms are used by the Operating Systems for Virtual Memory Management. A page is a block size in the memory for processes of a program. A program’s processes are divided in to smaller pages and these pages are loaded into the memory from the Virtual memory when they are required.</p>\n<p>Virtual Memory is a storage allocation scheme used by Memory Management Unit to execute processes that are not in the main memory completely. It allows to run processes that are larger than the main memory. Memory is expensive so Virtual Memory is used to reduce the cost.</p>\n<h2>Algorithms</h2>\n<p>In the memory, fixed number of pages can only be used at the same time so when a page is needed to process it is first checked in the memory block called frame. If the page is in the frame it is processed and if not a Page Replacment Algorithm is used to swap the requested page into the memory to process it.</p>\n<p>The OS defines a Reference String which is a large set of all the pages numbers that will be processed one by one. It looks like the following.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">ref_str <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>and consider that the memory can store only three pages at a time so the Algorithm will decide what page to load. There are many algorithms that are used to replace pages but I will be only writing two of them which are FIFO and POR.</p>\n<h3>First In FIrst Out (FIFO)</h3>\n<p>This page swapping algorithm does what it name says. It first looks at the first page number from the <code class=\"language-text\">ref_str</code> and loads that page from the virtual memory then it does the same for the second and the third page but after that when a fourth page is needed to load t check wether the page is already in the frame or not and if not it will swap the page with the one that was loaded first in the current frame.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span>\n       <span class=\"token operator\">--</span><span class=\"token operator\">-</span> Frames <span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n<span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">-</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">-</span><span class=\"token operator\">|</span><span class=\"token operator\">-</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span></code></pre></div>\n<p>As you can see first it loads 7, then 0, then 1 and after that it will load 2 but in place of 7 because 7 was the first one from the frame that was loaded in.</p>\n<h3>Page Optimal Replacement (POR)</h3>\n<p>Page Optimal Replacement algorithm will only replace the page that will not be used for the longer peroid of time. It checks the <code class=\"language-text\">ref_str</code> first and decides what page to replace when the time comes for the page that is not in the frame to be loaded.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">4</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span>\n       <span class=\"token operator\">--</span><span class=\"token operator\">-</span> Frames <span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n<span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">-</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">4</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">-</span><span class=\"token operator\">|</span><span class=\"token operator\">-</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span></code></pre></div>\n<p>This example shows that at frame six, the algorithm replaces one instead of 2 becasue the page one is not being used in the frame until the very last frame and other two were being used in the future. This is the most efficient page replacement algorithm but it is also difficut to implement becasue the algorithm has to know what pages will be used in the future to work properly.</p>","frontmatter":{"title":"Day 62 - Page Replacement Algorithms","date":"March 03, 2021","description":null,"tags":["Data-Structures","Algorithms"]}},"previous":{"fields":{"slug":"/day-61/"},"frontmatter":{"title":"Day 61 - Dijkstra's Path-Finding Algorithm"}},"next":{"fields":{"slug":"/day-63/"},"frontmatter":{"title":"Day 63 - Scheduling and Scheduling Algorithms [0]"}}},"pageContext":{"id":"bd9ba5ee-fdbe-50bf-b33a-dc26ed8dd193","previousPostId":"977bc454-68b2-57b6-afc6-bb0dade3c0c0","nextPostId":"663426c8-f948-5471-abe6-24b2ef5a6a43"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}