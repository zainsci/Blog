{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-69/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"c8672d36-43da-5e95-a35e-764627b8e1bb","excerpt":"So far I have wrote about what Operating Systems are but now I will start writing about how it works and what makes it work but before going into details I willâ€¦","html":"<p>So far I have wrote about what Operating Systems are but now I will start writing about how it works and what makes it work but before going into details I will write about Interrurpts. So what are interrupts?</p>\n<h2>What Are Interrupts?</h2>\n<p>An interrupt is a hardware-generated change-of-flow within the system. Interrupt is way for electronic devices to tell the CPU that they need attention because their state just changed. When an interrupt happens the processor will call the function to interrupt handler and stops the current running process, saves it state and executes the interrupt function and after handeling the interrupt it will get back to the process that it stopped before the interrupt.</p>\n<p>Common functions of Interrupt are following.</p>\n<ul>\n<li>When an interrupt occurs, the interrupt handler which will look for the appropriate services to handle the interrupt.</li>\n<li>Incoming interrupts must be put on hold until the current interrupt is not handled. This is to prevent the interrupts for being lost or overwritten.</li>\n<li>An interrupt is generally caused by the hardware device to let CPU know that some data has been read from the device and is waiting for it to be processed.</li>\n<li>An OS is interrupt driven which means that the OS will be idle if there is not interrupt.</li>\n<li>The OS must save the state and addresses of the current running process before handeling the interrupt.</li>\n<li>The OS must know which device generated the interrupt. This is done either by checking every device for state change or checking the identity of the interrupt generating device by vectored interrupt system.</li>\n<li>The OS must provide the segment code for all kind of interrupts that it can encounter.</li>\n</ul>\n<h2>Types Of Interrupts</h2>\n<p>Following are the types of interrutps that are mostly encountred by the system.</p>\n<h3>Supervisor Call Interrupts</h3>\n<p>The type of interrupts that are initiated by the running process that executes the Supervisor Call instruction are called Supervisor Call Interrupts. For example this could be in form of a user request asking for performing I/O functions to obtains input for the input device.</p>\n<h3>I/O Interrupts</h3>\n<p>I/O interrupts occur when the state of the I/O devices changes. For example when the I/O device is ready or get an error.</p>\n<h3>External Interrupts</h3>\n<p>External Interrupts are caused by many events. It can be caused by the the clock or by pressing the interrupting key or by an other processor in a multiprocessor unit.</p>\n<h3>Restart Interrupts</h3>\n<p>These interrupts occur when restart button is pressed or restart signal is received from the processor.</p>\n<h3>Program Check Interrupts</h3>\n<p>These kind of interrupts are caused by the programs executing the machine language instructions. For example an interrupt will occur when you try to divide by zero or when the provided data is in wrong format.</p>\n<h3>Machine Check Interrupts</h3>\n<p>The interrupts that occur when some hardware does not functions properly.</p>","frontmatter":{"title":"Day 69 - Operating System Interrupts","date":"March 10, 2021","description":null,"tags":["Operating-Systems"]}},"previous":{"fields":{"slug":"/day-68/"},"frontmatter":{"title":"Day 68 - Why Applications are Os Specific"}},"next":null},"pageContext":{"id":"c8672d36-43da-5e95-a35e-764627b8e1bb","previousPostId":"ce4a27d4-2570-5805-885a-38fd15abbaba","nextPostId":null}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}