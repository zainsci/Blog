{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-121/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"ba58b20d-a5a0-5e41-88f8-7f28f3ba437d","excerpt":"Now we know all the basics of Rust Programming Language like Control Flow Statements, Variables, Comments and Functions etc. Now we will be taking a look at…","html":"<p>Now we know all the basics of Rust Programming Language like Control Flow Statements, Variables, Comments and Functions etc. Now we will be taking a look at intermediate concepts of Rust Programming Language. Things like Enums, Structs and Traits etc. For today we will try to understand what Enums are.</p>\n<h3>Enums</h3>\n<p>Enumerations or simply Enums allow us to define our own custom types. These data types consists of predefined named values called elements or members etc. To create an Enum in Rust we use the following syntax.</p>\n<div class=\"gatsby-highlight\" data-language=\"rs\"><pre class=\"language-rs\"><code class=\"language-rs\">fn main() {\n  // Creating an enum\n  enum Name {\n    Member01,\n    Member02,\n    // ...\n    MemberN\n  }\n}</code></pre></div>\n<p>We use the <code class=\"language-text\">enum</code> keywork followed by the name of the enum and then curly braces and inside those curly braces comes the values or members.</p>\n<p>Now lets create an enum named <code class=\"language-text\">Fruits</code> and see where can it be helpful.</p>\n<div class=\"gatsby-highlight\" data-language=\"rs\"><pre class=\"language-rs\"><code class=\"language-rs\">fn main() {\n  enum Fruit {\n    Apple,\n    Orange,\n    Kiwi\n  }\n}</code></pre></div>\n<p>To reference an enum value we use double colon after the enum name and then the name of the value.</p>\n<div class=\"gatsby-highlight\" data-language=\"rs\"><pre class=\"language-rs\"><code class=\"language-rs\">let apple = Fruit::Apple;</code></pre></div>\n<p>Members of the enums also have a value inside the enum. For example startig from zero the Kiwi fruit will have a value of 2.</p>\n<div class=\"gatsby-highlight\" data-language=\"rs\"><pre class=\"language-rs\"><code class=\"language-rs\">println!(&quot;{}&quot;, Fruit::Kiwi as i32); // 2</code></pre></div>\n<p>But we can also define values to the elements of enums like so.</p>\n<div class=\"gatsby-highlight\" data-language=\"rs\"><pre class=\"language-rs\"><code class=\"language-rs\">enum Company {\n  Apple = &quot;APL&quot;,\n  Tesla = &quot;TSLA&quot;\n}</code></pre></div>\n<p>This is all about Enums for now. This might be a simple thing for some but I still don’t know where this thing could be useful in programming. Ofcourse this is useful in programming that is why it is there. But maybe I will come across something that will let me know the importance of enums in programming but for now lets just leave it like this.</p>","frontmatter":{"title":"Day 121 Enums In Rust","date":"May 01, 2021","description":null,"tags":["Rust","Programming-Language"]}},"previous":{"fields":{"slug":"/day-120/"},"frontmatter":{"title":"Day 120 - Control Flow In Rust"}},"next":{"fields":{"slug":"/day-122/"},"frontmatter":{"title":"Day 122 - Structs And Traits In Rust"}}},"pageContext":{"id":"ba58b20d-a5a0-5e41-88f8-7f28f3ba437d","previousPostId":"f0d91280-de2a-55c8-a24e-62b4b72ca3f7","nextPostId":"b9ca297d-e90c-5d8c-b375-4a60aaf97922"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}