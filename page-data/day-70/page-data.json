{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-70/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"ee526107-c18c-58a8-aaef-ae931e0a7139","excerpt":"Process Management In the early days of the computers one computer which was as big as a truck could run only one program at a time. That means that one program…","html":"<h1>Process Management</h1>\n<p>In the early days of the computers one computer which was as big as a truck could run only one program at a time. That means that one program had access to all the resources a computer but modern computers allow us to run multiple programs at once and can fit in the palms of our hands.</p>\n<p>Modern computers are becoming more and more powerful everyday and are able to handle hundreds of processes at a time. But what is a process and that is what I will be learning about from now.</p>\n<h2>Processes</h2>\n<p>As mentioned above that the early computers only executed one program at a time, We call these types of computers Batch Computers. But now a days even a single-user system can execute more than one programs at a time like a browser and a word processing softwore etc. All these programs are handeled by the OS that run activites to execute them. these activites are called porcesses. Process is also called a Job because in the past when OS was a new concept job was the term used for what we now call a process so many of the terms in the OS are named after the term job rather than the process.</p>\n<p>A Process is a program in execution. The status of current activity of a process is represented by the value of the program counter and the contents of the processor’s registers.</p>\n<p>The memory layout of a process is divided into multiple parts, Text, Data, Heap and Stack.</p>\n<ul>\n<li><strong>Text Section</strong> - The executeable code</li>\n<li><strong>Data Section</strong> - Global variables</li>\n<li><strong>Heap Section</strong> - The memory that is dynamically allocated during the program runtime</li>\n<li><strong>Stack Section</strong> - Temporary data storage when invoking functions</li>\n</ul>\n<p>I am ending this here because I don’t have time to complete this now but I will fill it tomorrow.</p>","frontmatter":{"title":"Day 70 - Process Management","date":"March 11, 2021","description":null,"tags":["Operating-Systems"]}},"previous":{"fields":{"slug":"/day-69/"},"frontmatter":{"title":"Day 69 - Operating System Interrupts"}},"next":null},"pageContext":{"id":"ee526107-c18c-58a8-aaef-ae931e0a7139","previousPostId":"c8672d36-43da-5e95-a35e-764627b8e1bb","nextPostId":null}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}