{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-99/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"4d974a4a-6caa-58a8-85cd-81175e934b4b","excerpt":"In last post we learned that the memory management in the operating systems in necessary in order for the relocation, protection and sharing of data between theâ€¦","html":"<p>In last post we learned that the memory management in the operating systems in necessary in order for the relocation, protection and sharing of data between the running processes. Each process is a program in execution and each program is a piece of code that is translated into machine code and instructions for execution by the CPU. Each process has its own instructions in the memory and are executed according to these instructions.</p>\n<p>A process has a logical <strong>address space</strong>. It is a linear set of locations per program code, variables and stacks. All or some part of the logical address space is then converted into physocal addresses in the main memory. The address space is a product of <strong>translation-linking-loading</strong> process and the physical address is a subset of the main memory.</p>\n<p>Translators from the source code generate relocateable object code modules and then these modules are linked with each other to form another single module called a <strong>load-module</strong>. This module is loaded into the main memory. The process of converting addresses generated by the translator to physical addresses in the memory is called adrress binding and must be done at some time in the process execiton. This binding can be done at compile time, run time or load time. The most common time for modern systems is run time.</p>\n<h3>Types Of Addresses</h3>\n<p>Following are the different types of addresses.</p>\n<h4>Symbolic Addresses</h4>\n<p>The variable names and named instructions in the source code. The translator translates them into logical addresses.</p>\n<h4>Logical Addresses</h4>\n<p>Logical addresses are assigned independent of the physical locations and may require more mapping operatins to be bound to the absolute addresses.</p>\n<h4>Relative Addresses</h4>\n<p>This address is assigned by the transaltor and is kind of a logical address. This address is expressed as a location to some known point such as the beginning of the process.</p>\n<h4>Physical Addresses</h4>\n<p>It is also called absolute address and is the actual space in the main memory where instructions and variables are loaded.</p>","frontmatter":{"title":"Day 99 - Program Translation And Address Spaces","date":"April 09, 2021","description":null,"tags":["Operating-Systems"]}},"previous":{"fields":{"slug":"/day-98/"},"frontmatter":{"title":"Day 98 - Memory Management Basic Requirements"}},"next":{"fields":{"slug":"/day-100/"},"frontmatter":{"title":"Day 100 - Loading And Linking"}}},"pageContext":{"id":"4d974a4a-6caa-58a8-85cd-81175e934b4b","previousPostId":"35a08753-c234-5503-95e6-3d8dc7c09399","nextPostId":"53585a5e-1efe-54ca-b9f8-4684b2b71c37"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}