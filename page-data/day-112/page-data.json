{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-112/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"7c0e443e-7305-5de2-8cd6-73a657d6ac65","excerpt":"So far in Virtual Memory we have learned what virtual memory is and one of the techniques that are used to implement VM. Now we will be looking at Page…","html":"<p>So far in Virtual Memory we have learned what virtual memory is and one of the techniques that are used to implement VM. Now we will be looking at Page Replacement which is what is says. It a way to replace pages in the memory in multiprogramming systems.</p>\n<p>In multiprogramming systems, almost all of the programs use half of the memroy of their size. For example the program with 10 pages only actually uses 5 pages. The demand paging mechanism saves the I/O time necessary to load the five pages that are never used. In this case the degree of multiprogramming should be increased.</p>\n<p>Increase in the degree of the multiprogramming may leads to problems like over allocation of memory.</p>\n<p>If a page fault occurs, the OS checks the internal page table. It determines where the page is in the disk but does not find any free frame in the memory to swap it into. For this situation, the OS has following ways for it to be solved.</p>\n<ul>\n<li>Either it terminates the use program immediately; or</li>\n<li>It swaps out pne program and free all of its frames from the memory. It in turn reduces the degree of multiprogramming.</li>\n</ul>\n<p>That where Page Replacement comes in as another possibility to this situtaion.</p>\n<h3>What Is Page Replacement?</h3>\n<p>Page Replacement is another possibility to the situation where a page fault occurs requesting for page in the memory but there is frame free in the memory for the page to be loaded. <strong>Page Replacement</strong> frees one frame from the memroy that is not being used right now by any program. It writes the contents of the frame in the disk and update the page table to indicate that this page is not being used right now and is not in the memory. The freed frame now can be used to load the requested page. The page fault processing procedure can be modified to include the page replacement mechanism:</p>\n<ul>\n<li>First find the required page’s location on the disk.</li>\n<li>Find the free frame and if there is, use it or else use a page replacement algorithm to select a frame from the memory, write it to disk, change the frame and frame table accordingly.</li>\n<li>Read the requested page into the free frame in the memory and chage the frame table.</li>\n<li>Restart the user process.</li>\n</ul>\n<p>If there is no frame free in the memory at the time of page fault, <strong>page replacement</strong> occurs. This doubles the page fault processing but increses the effective access time.</p>\n<p>There are many Page Replacement algorithms that are used to solve this problem. In next post we will be looking into some of those.</p>","frontmatter":{"title":"Day 112 - Page Replacement In Virtual Memroy","date":"April 22, 2021","description":null,"tags":["Operating-Systems"]}},"previous":{"fields":{"slug":"/day-111/"},"frontmatter":{"title":"Day 111 - Demand Paging In Virtual Memory"}},"next":{"fields":{"slug":"/day-113/"},"frontmatter":{"title":"Day 113 - Page Replacement Algorithms"}}},"pageContext":{"id":"7c0e443e-7305-5de2-8cd6-73a657d6ac65","previousPostId":"e1decf00-6be2-524d-b0b4-58ebe6023804","nextPostId":"a78366cd-c3fe-5fe9-9ca2-c3cb04cdfa80"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}