{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-46/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"b1ef9d33-60cf-5f4a-acef-2bc1f294bdc8","excerpt":"This is the 15th post in the Linux Series and this will about Scheduling Processes in a Linux System. Anyone learning Linux must know how to schedule processesâ€¦","html":"<p>This is the 15th post in the Linux Series and this will about Scheduling Processes in a Linux System. Anyone learning Linux must know how to schedule processes in the Linux as it can be very useful once you start getting better at it and want to schedule processes like backing-up certain files and running a certain process at a certain time etc. There are two ways that I know to schedule processes in Linux, one is <code class=\"language-text\">at</code> and the other is <code class=\"language-text\">cron</code>.</p>\n<h2>Scheduling Process To Run Only Once</h2>\n<p>The <code class=\"language-text\">at</code> command is used to run some process at a certain time in the future for only once. <code class=\"language-text\">at</code> command is a daemon which a background process used to schedule a process.</p>\n<p>The <code class=\"language-text\">at</code> command accepts an argument as a time stamp and then asks for a file or processs to run at that time.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ at <span class=\"token number\">7</span>:00am\nat<span class=\"token operator\">></span>/home/User/script-to-run</code></pre></div>\n<p>The <code class=\"language-text\">at</code> command accepts following time formats to schedule tasks.</p>\n<table>\n<thead>\n<tr>\n<th>Format</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>at noon</td>\n<td>Runs at noon on the current day</td>\n</tr>\n<tr>\n<td>at tomorrow</td>\n<td>Runs tomorrow from current day</td>\n</tr>\n<tr>\n<td>at now + n minutes</td>\n<td>Runs after n minutes from the current time</td>\n</tr>\n<tr>\n<td>at now + n hours</td>\n<td>Runs after n hours from the current time</td>\n</tr>\n<tr>\n<td>at now + n days</td>\n<td>Runs after n day from the current time</td>\n</tr>\n<tr>\n<td>at now + n weeks</td>\n<td>Runs after n weeks from the current time</td>\n</tr>\n<tr>\n<td>at 10:00am</td>\n<td>Runs at 10:00 AM of the current day</td>\n</tr>\n<tr>\n<td>at 10:00pm</td>\n<td>Runs at 10:00 PM of the current day</td>\n</tr>\n<tr>\n<td>at 10:00pm May 15</td>\n<td>Runs at 10 PM on May 25</td>\n</tr>\n<tr>\n<td>at 10:00pm 05/15/2021</td>\n<td>Runs at 10 PM on May 25</td>\n</tr>\n</tbody>\n</table>\n<h2>Scheduling Process To Run Regularly</h2>\n<p>The <code class=\"language-text\">cron</code> daemon (Daemon: a process that runs in the background) is used to schedule task to run on regular basis on a specified time. The <code class=\"language-text\">cron</code> and <code class=\"language-text\">crontab</code> are used to manage these tasks.</p>\n<p>To shcedule a task using <code class=\"language-text\">cron</code> you need to edit the <code class=\"language-text\">crontab</code> (cron table) file with adding or removing the task you want to schedule to run after the time that you specify in the file. The <code class=\"language-text\">crontab</code> accepts the following syntax.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">M   H   DOM   MON   DOW   <span class=\"token environment constant\">USER</span>   COMMAND\n*   *   *     *     *     User   /lib/command</code></pre></div>\n<p>The five stars are for Minute, Hour, DayOfMonth, MONth, DayOfWeek respectively. You specify Minutes, Hours, DayOfMonth, MONth, DayOfWeek in the place of the stars (asterisks) after which the task should run. The Units to use in place of asterisks are following.</p>\n<table>\n<thead>\n<tr>\n<th>Unit</th>\n<th>Limit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Minute (M)</td>\n<td>After 0 to 59 Minutes</td>\n</tr>\n<tr>\n<td>Hour (H)</td>\n<td>After 0 to 23 Hours</td>\n</tr>\n<tr>\n<td>Day Of the Month (DOM)</td>\n<td>After 1 to 31 Days</td>\n</tr>\n<tr>\n<td>Month (MON)</td>\n<td>After 1 to 12</td>\n</tr>\n<tr>\n<td>Day Of the Week</td>\n<td>After 0 to 7 Days</td>\n</tr>\n</tbody>\n</table>\n<p>Note: 0 and 7 for DOW both means sunday.</p>\n<p>For Example: I want to backup a file after everyday at 10:00AM from monday to friday as a root user I will edit the <code class=\"language-text\">crontab</code> file like following.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@User:~$ <span class=\"token function\">crontab</span> -e\n<span class=\"token comment\"># After selecting the editor to edit the crontab file</span>\n--- FILE STARTING ---\n<span class=\"token comment\"># m h dom mon dow user command</span>\n<span class=\"token number\">0</span> <span class=\"token number\">10</span> * * <span class=\"token number\">1</span>-5 root /home/user/backup-script</code></pre></div>\n<p>The 0 and 10 means at 10:00AM, two askterisks next means run them no matter what day of the month or what month it is, 1-5 means first five days of the week from monday to firday as a root user run a script with path /home/user/backup-script.</p>\n<p>You can add as many task to schedule in the <code class=\"language-text\">crontab</code> as you want by adding one line after another in the <code class=\"language-text\">crontab</code> for one task.</p>","frontmatter":{"title":"Day 46 - Scheduling Tasks In Linux","date":"February 15, 2021","description":null,"tags":["Linux"]}},"previous":{"fields":{"slug":"/day-45/"},"frontmatter":{"title":"Day 45 - Instaling, Updating, Removing Software In Linux"}},"next":{"fields":{"slug":"/day-47/"},"frontmatter":{"title":"Day 47 - Environment Variables In Linux"}}},"pageContext":{"id":"b1ef9d33-60cf-5f4a-acef-2bc1f294bdc8","previousPostId":"88842258-eefc-5414-8f7c-d40cbfdc20ed","nextPostId":"b1b9c813-4715-5bf9-bb39-173812aebc5d"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}