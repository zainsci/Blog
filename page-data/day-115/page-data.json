{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-115/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"ade44491-c50c-5d3d-9c1c-984bd690aa5d","excerpt":"Taking another break from OS study and will be learning another programming language and that will be Rust which is a “blazingly fast and memory-efficient: with…","html":"<p>Taking another break from OS study and will be learning another programming language and that will be Rust which is a “blazingly fast and memory-efficient: with no runtime or garbage collector, it can power performance-critical services, run on embedded devices, and easily integrate with other languages”. But first of all:</p>\n<h3>Why Learn This Language?</h3>\n<p>The primary reason I can think of learning this language is beasue of WebAssembly. Now what is a WebAssembly? WebAssembly is a binary-code that allows a user to execute code written in languages other than JavaScript on the web at near native speed. Rust is one of the languages that can be compiled to WebAssembly and used to build high performance apps on the web.</p>\n<p>Other reasons for learning this language is that it guarantees memory safety, easy to learn (for those who already know C or C++) and is compatible with all operating systems. Now we will begin learning Rust but first we need do have to take care of some initial setup.</p>\n<h3>Initial Setup</h3>\n<p>To install the Rust compiler on Windows Machine, Go to Rust’s website and download the Rust compiler .exe file and install it as any other software. And if you are on UNIX based operating systems it is much easy you just need to run the following command.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Linux<span class=\"token operator\">>></span> <span class=\"token function\">curl</span> --proto <span class=\"token string\">'=https'</span> --tlsv1.2 -sSf https://sh.Rustup.rs <span class=\"token operator\">|</span> <span class=\"token function\">sh</span></code></pre></div>\n<p>After installation you can type the following command in the shell to be sure that the installation was successful.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">C:\\Users\\User&gt; rustc --version\nRustc 1.51.0 (2fd73fabe 2021-03-23)</code></pre></div>\n<p>After that we will be needing a code editor for writing our Rust code and for that I will be using Visual Studio Code.</p>\n<h3>Writing First Rust Program</h3>\n<p>Every Rust file ends with <code class=\"language-text\">.rs</code> just like how python file ends with <code class=\"language-text\">.py</code>. Now first I created a directory named Rust and then created a file called <code class=\"language-text\">main.rs</code> in it and opened it in VS-Code.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Linux<span class=\"token operator\">>></span> <span class=\"token function\">mkdir</span> Rust\nLinux<span class=\"token operator\">>></span> <span class=\"token function\">touch</span> main.rs\nLinux<span class=\"token operator\">>></span> code <span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>This is what a simple Rust program looks like. There is a main function just like C and C++ that is the entry point to your program.</p>\n<div class=\"gatsby-highlight\" data-language=\"rs\"><pre class=\"language-rs\"><code class=\"language-rs\">fn main() {\n    println!(&quot;Hello World!&quot;);\n}</code></pre></div>\n<p>To run this, first we have to compile it and to compile a Rust program there are two ways, either use <code class=\"language-text\">Rustc</code> or <code class=\"language-text\">cargo</code>. For a small program we can simply use <code class=\"language-text\">Rustc</code>. <code class=\"language-text\">cargo</code> is used to compile large projects.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Linux<span class=\"token operator\">>></span> rustc main.rs\n./main\nLinux<span class=\"token operator\">>></span> ./main\nHello World<span class=\"token operator\">!</span></code></pre></div>\n<p>And that it for today and in the next post we will be learning about variables, comments, functions and all other basics of Rust programming language.</p>","frontmatter":{"title":"Day 115 - RUST Programming Language","date":"April 25, 2021","description":null,"tags":["Rust","Programming-Language"]}},"previous":{"fields":{"slug":"/day-114/"},"frontmatter":{"title":"Day 114 - Thrashing In Memory"}},"next":{"fields":{"slug":"/day-116/"},"frontmatter":{"title":"Day 116 - Comments, Variables & Types In Rust"}}},"pageContext":{"id":"ade44491-c50c-5d3d-9c1c-984bd690aa5d","previousPostId":"c11a2edb-222b-506a-81ec-5a7d39aeb821","nextPostId":"c4222fa4-1e05-5f01-8815-c6b8cfedd091"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}