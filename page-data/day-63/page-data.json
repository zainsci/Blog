{"componentChunkName":"component---src-templates-blog-post-js","path":"/day-63/","result":{"data":{"site":{"siteMetadata":{"title":"zainsci-blog"}},"markdownRemark":{"id":"663426c8-f948-5471-abe6-24b2ef5a6a43","excerpt":"Last day I learned about some simple algorihtms that are used in the OS design and today I will be learning about more algorithms that are also used in…","html":"<p>Last day I learned about some simple algorihtms that are used in the OS design and today I will be learning about more algorithms that are also used in Operating Systems. These are scheduling algorithms that are mostly used in the Operating System’s Scheduler for scheduling tasks.</p>\n<h2>Process Scheduler</h2>\n<p>A Process Scheduler is a part of the operating system that makes the decision for the CPU on what porcess to select form the queue to perform actions on it. The processes are placed in a queue and are selected by the scheduler to take actions on them by the CPU. There are three types of schedulers that work in an operating system but I will not be going in depth about them because this is about algorithms only and these are:</p>\n<ul>\n<li>Long Term Scheduler</li>\n<li>Short Term Scheduler</li>\n<li>Medium Term Scheduler</li>\n</ul>\n<h2>Scheduling Algorithms</h2>\n<p>A scheduler uses algorithms to decide the prioirty of the processes in the queue to feed them to the CPU and these algorithms are called Scheduler algorithms. There are atleast six very commin kinds of scheduler algorithms and I will be doning two of them today and maybe three or four of them tomorrow.</p>\n<ul>\n<li>FCFS Scheduling</li>\n<li>SJF Scheduling</li>\n<li>Priority Scheduling</li>\n<li>Round Robin Scheduling</li>\n<li>MLQ Scheduling</li>\n<li>Multiple Processor Scheduling</li>\n</ul>\n<h3>First Come First Serve (FCFS) Scheduling</h3>\n<p>A scheduling algorithm which is based on First Come First Serve basis. It means the process that enters the queue first will be executed first and so on. It is easy to implement and understand and kind of works the same way as the Data Structure Queue.</p>\n<p>The disadvantages of this algorithm is that it is very much slow than most of the algorithms in the list. and takes a lot of time to process.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span> Before Execution <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span> Processes <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n<span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">4</span><span class=\"token operator\">|</span><span class=\"token number\">5</span><span class=\"token operator\">|</span><span class=\"token number\">6</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">8</span><span class=\"token operator\">|</span><span class=\"token number\">9</span><span class=\"token operator\">|</span>\n\nprocessBeingExecuted <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nnextProcess <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span> After Execution <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span> Processes <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n<span class=\"token operator\">|</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token operator\">|</span><span class=\"token number\">4</span><span class=\"token operator\">|</span><span class=\"token number\">5</span><span class=\"token operator\">|</span><span class=\"token number\">6</span><span class=\"token operator\">|</span><span class=\"token number\">7</span><span class=\"token operator\">|</span><span class=\"token number\">8</span><span class=\"token operator\">|</span><span class=\"token number\">9</span><span class=\"token operator\">|</span>\n\nprocessBeingExecuted <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nnextProcess <span class=\"token operator\">=</span> <span class=\"token number\">2</span></code></pre></div>\n<h3>Shortest Job First (SJF) Scheduling</h3>\n<p>Shortest Job First Scheduling algorithm pick the process first that will take the least amount of time to complete. By this way average waiting time is reduced by running the shortest job first. And easy to implement in systems where CPU time id known in advance and impossible to implement in systems where the process time is unknow at first. That is why to make is work fast, process time should be know at the beginnig of the process.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">|</span>  Job  <span class=\"token operator\">|</span>  Arrival Time  <span class=\"token operator\">|</span>  Process Time  <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">0</span>   <span class=\"token operator\">|</span>  <span class=\"token number\">1</span>             <span class=\"token operator\">|</span>  <span class=\"token number\">5</span>             <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">1</span>   <span class=\"token operator\">|</span>  <span class=\"token number\">0</span>             <span class=\"token operator\">|</span>  <span class=\"token number\">2</span>             <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">2</span>   <span class=\"token operator\">|</span>  <span class=\"token number\">2</span>             <span class=\"token operator\">|</span>  <span class=\"token number\">1</span>             <span class=\"token operator\">|</span>\n\nprocessQueue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// Based on Process Time</span></code></pre></div>","frontmatter":{"title":"Day 63 - Scheduling and Scheduling Algorithms [0]","date":"March 04, 2021","description":null,"tags":["Data-Structures","Algorithms"]}},"previous":{"fields":{"slug":"/day-62/"},"frontmatter":{"title":"Day 62 - Page Replacement Algorithms"}},"next":{"fields":{"slug":"/day-64/"},"frontmatter":{"title":"Day 64 - Scheduling and Scheduling Algorithms [1]"}}},"pageContext":{"id":"663426c8-f948-5471-abe6-24b2ef5a6a43","previousPostId":"bd9ba5ee-fdbe-50bf-b33a-dc26ed8dd193","nextPostId":"3130ab3d-924a-5b1d-9e2e-a7e1a0bf21ea"}},"staticQueryHashes":["1578995489","290055352","3347749741","3894407297"]}