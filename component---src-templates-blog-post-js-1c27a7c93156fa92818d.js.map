{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","console","log","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2FAAA,8GA0EeA,UApEU,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAGlB,OAFAC,QAAQC,IAAIX,GAGV,kBAAC,IAAD,CAAQC,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,6BACEC,UAAU,aACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYhB,EAAKU,YAAYL,OAC1C,2BAAIL,EAAKU,YAAYO,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQnB,EAAKoB,MACxCJ,SAAS,iBAGb,6BACA,6BACA,6BACA,yBAAKH,UAAU,mBACb,wBACEQ,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGpB,GACC,kBAAC,OAAD,CACEqB,GAAIrB,EAASsB,OAAOC,KACpBhB,UAAU,mBACViB,IAAI,QAHN,KAKKxB,EAASI,YAAYL,QAI9B,4BACGE,GACC,kBAAC,OAAD,CACEoB,GAAIpB,EAAKqB,OAAOC,KAChBhB,UAAU,mBACViB,IAAI,QAEHvB,EAAKG,YAAYL,MALpB,SAWR,+BAOC,IAAM0B,EAAS","file":"component---src-templates-blog-post-js-1c27a7c93156fa92818d.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark;\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\r\n  const { previous, next } = data;\r\n  console.log(data);\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog__post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n      </article>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <nav className=\"blog__post__nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link\r\n                to={previous.fields.slug}\r\n                className=\"pagination__link\"\r\n                rel=\"prev\"\r\n              >\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link\r\n                to={next.fields.slug}\r\n                className=\"pagination__link\"\r\n                rel=\"next\"\r\n              >\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <hr />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}