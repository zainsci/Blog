{"pageProps":{"post":{"title":"Day 148 - Creating A Design System â€¢ Spacing","date":"2021-05-28","slug":"day-148","content":"<p>This is the third post on creating a Design System of your own and until now we have learned about the colors and typography parts of the system. Now we will be having a look at Spacing of the Design System.</p>\n<p>Just as before first we will be have a base variable from which we will calculate all the other spacing values. The reason why we define a base value if because of it being the single source of truth for all of our other values. If we want to change the scale of the project we only have to change a single line of code.</p>\n<p>This can be very helpful when making your projects responsive. You might want to have a more spacing when the viewport is biiger and smaller spacing when the viewport is smaller like when using a mobile phone etc.</p>\n<pre><code class=\"language-scss\">$space-base: 1rem;\n</code></pre>\n<p>From this we calculate our main spacing utilities.</p>\n<pre><code class=\"language-scss\">$space-xxs: $space-base * 0.25;\r\n$space-xs: $space-base * 0.5;\r\n$space-sm: $space-base * 0.75;\r\n$space-md: $space-base * 1.25;\r\n$space-lg: $space-base * 2;\r\n$space-xl: $space-base * 3.25;\r\n$space-xxl: $space-base * 5.25;\n</code></pre>\n<p>Now where ever we use these variables we can just update them by changing the <code>$space-base</code> variable.</p>\n<h2>Spacing Classes</h2>\n<p>Now this is all helpful but now I want to have more helper classes for padding and margin in our project just like bootstrap. To create helper classes we will be using the same variable as the base for all the classes.</p>\n<pre><code class=\"language-scss\">@for $i from 1 to 21 {\r\n  // Padding Helper Classes\r\n  .p-#{$i} {\r\n    padding: ($space-base / 2) * $i;\r\n  }\r\n  .px-#{$i} {\r\n    padding-left: ($space-base / 2) * $i;\r\n    padding-right: ($space-base / 2) * $i;\r\n  }\r\n  .py-#{$i} {\r\n    padding-top: ($space-base / 2) * $i;\r\n    padding-bottom: ($space-base / 2) * $i;\r\n  }\r\n  // Margin Helper Classes\r\n  .m-#{$i} {\r\n    margin: ($space-base / 2) * $i;\r\n  }\r\n  .mx-#{$i} {\r\n    margin-left: ($space-base / 2) * $i;\r\n    margin-right: ($space-base / 2) * $i;\r\n  }\r\n  .my-#{$i} {\r\n    margin-top: ($space-base / 2) * $i;\r\n    margin-bottom: ($space-base / 2) * $i;\r\n  }\r\n}\n</code></pre>\n<p>This for look will create padding and margin classes ranging from <code>.5rem</code> with an intervel of <code>.5rem</code> up to <code>10rem</code>.</p>\n<p>We can also create helper classes for top, left, bottom and right side of the elements with SCSS.</p>\n<pre><code class=\"language-scss\">@for $i from 1 to 21 {\r\n  .pt-#{$i} {\r\n    padding-top: ($space-base / 2) * $i;\r\n  }\r\n  .pl-#{$i} {\r\n    padding-left: ($space-base / 2) * $i;\r\n  }\r\n  .pb-#{$i} {\r\n    padding-bottom: ($space-base / 2) * $i;\r\n  }\r\n  .pr-#{$i} {\r\n    padding-right: ($space-base / 2) * $i;\r\n  }\r\n}\n</code></pre>\n<p>And same can be done with margin classes.</p>\n<pre><code class=\"language-scss\">@for $i from 1 to 21 {\r\n  .mt-#{$i} {\r\n    margin-top: ($space-base / 2) * $i;\r\n  }\r\n  .ml-#{$i} {\r\n    margin-left: ($space-base / 2) * $i;\r\n  }\r\n  .mb-#{$i} {\r\n    margin-bottom: ($space-base / 2) * $i;\r\n  }\r\n  .mr-#{$i} {\r\n    margin-right: ($space-base / 2) * $i;\r\n  }\r\n}\n</code></pre>\n<p>Next we will be designing buttons and forms and then after that will be last part which will be abour grid layout.</p>\n","tags":["Design-System","Design","CSS"]}},"__N_SSG":true}