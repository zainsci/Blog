{"pageProps":{"post":{"title":"Day 34 - Navigating Linux Command Line","date":"2021-02-03","slug":"day-34","content":"<p>This is the third post in the Linux Series and this post will be about navigating the command line and getting help for commands etc. I will also write about some basic concepts like arguments and such.</p>\n<h2>Command Arguments</h2>\n<p>First we need to learn about the command arguments. An argument is a keyword that you type in front of a command to change the output in some way. A command can accept no argument or one or more than one argument.</p>\n<p>Everything you type after the command separated by a space is an argument. For exmaple using <code>cd</code> command to change directory you provide the path or name of the directory to to it to.</p>\n<h2>Getting help for a command</h2>\n<p>To get some help about the command in use you type the --help command and press enter. The result will be how the command works and what input or arguments it takes and what the output will be etc.</p>\n<pre><code class=\"language-bash\">root@User:/$ cd --help\r\ncd: cd [-L|[-P [-e]] [-@]] [dir]\r\n    Change the shell working directory.\r\n\r\n    Change the current directory to DIR.  The default\r\n    DIR is the value of the HOME shell variable.\r\n\r\n    The variable CDPATH defines the search path\r\n    for the directory containing DIR. Alternative\r\n    directory names in CDPATH are separated by\r\n    a colon (:). A null directory name is the same\r\n    as the current directory.  If DIR begins\r\n    with a slash (/), then CDPATH is not used.\r\n    ...\r\n    ...\n</code></pre>\n<h2>Navigation</h2>\n<h3>pwd - Print working directory</h3>\n<p>It does what its name means, It prints the name of the directory that a user is currently working in.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ pwd\r\n/tmp\n</code></pre>\n<h3>ls - List items in the directory</h3>\n<p>It prints out the contents of the current directory.</p>\n<pre><code class=\"language-bash\">root@User:/$ ls\r\nbin     dev     root    run\r\nmnt     media   tmp     etc\r\nboot    ...     ...     ...\n</code></pre>\n<p>if you type <code>-a</code> argument in front of the <code>ls</code> command it will print out all the files including hidden ones.</p>\n<pre><code class=\"language-bash\">root@User:/root$ ls\r\n\r\nroot@User:/root$ ls -a\r\n.   ..   .viminfo   .profile   .bash_history   .bashrc\n</code></pre>\n<h3>cd - Change directory</h3>\n<p>Command to change the directory.</p>\n<pre><code class=\"language-bash\">root@User:/$ pwd\r\n/\r\nroot@User:/$ cd tmp\r\nroot@User:/tmp$ pwd\r\n/tmp\r\nroot@User:/tmp$ cd ..\r\nroot@User:/$ pwd\r\n/\n</code></pre>\n<p>It works like this <code>cd name-of-directory</code>. Two dots <code>..</code> means to go one step up in the filesystem.</p>\n<p>A complete path to the directory can also be typed as an argument. example</p>\n<pre><code class=\"language-bash\">root@User:/$ pwd\r\n/\r\nroot@User:/$ cd /tmp/some-dir/new-dir\r\nroot@User:/tmp/some-dir/new-dir$ pwd\r\n/tmp/some-dir/new-dir\n</code></pre>\n<p>To jump to the home directory of the user just type <code>~</code> as the argument to the <code>cd</code> command.</p>\n<pre><code class=\"language-bash\">root@User:/tmp/some-dir/new-dir$ pwd\r\n/tmp/some-dir/new-dir\r\nroot@User:/tmp/some-dir/new-dir$ cd ~\r\nroot@User:/$ pwd\r\n/\n</code></pre>\n<h2>Creating file and directories</h2>\n<p>Following commands are used to create new files and directories or modify existing files.</p>\n<h3>mkdir - Make Directory</h3>\n<p>mkdir is used to make new folders or directories.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls\r\n\r\nroot@User:/tmp$ mkdir new-dir\r\nroot@User:/$ ls\r\nnew-dir\r\nroot@User:/tmp$ mkdir another-new-dir\r\nroot@User:/tmp$ ls\r\nanother-new-dir   new-dir\n</code></pre>\n<h3>touch - Create new files</h3>\n<p>touch command create a newfile with the filename as an argument</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls\r\nroot@User:/tmp$ touch new-file\r\nroot@User:/tmp$ ls\r\nnew-file\n</code></pre>\n<p>There is also one command called <code>cat</code> not the animal cat but short form of concatenate that can also create new files and edit them but that command can do much more and I will discuss them more in the next posts.</p>\n","tags":["Linux"]}},"__N_SSG":true}