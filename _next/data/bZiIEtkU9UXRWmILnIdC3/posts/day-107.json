{"pageProps":{"post":{"title":"Day 107 - Svelte, A JavaScript FrontEnd Framework","date":"2021-04-17","slug":"day-107","content":"<p>Svelte is a JavaScript FrontEnd Framework just like React, Vue and Angular which is used to build frontend user interfaces. Its a \"tool for building fast web applications\". It is components based framework.</p>\n<p>There are many difference between Svelte and other frameworks like React but the main difference can be that Svelte is a compiler and it does not uses Virtual DOM for rendering its compoents in the Browser. It will compile your code into Vanila JavaScript at build time while react compiles the components at the run time.</p>\n<p>I will be taking a break from learning about Operating Systems and instead will foucs on WebDev for some time now. Svelte is the first thing I will be learning about and I have heard alot about it on Twitter and Youtube and now I will be learning the basics of it.</p>\n<h3>Installation</h3>\n<p>To get start with Svelte we run the following command which is just like <code>npx create-react-app</code> command that will setup all the basic files for us.</p>\n<pre><code class=\"language-bash\">User: ~/svelte$ npx degit sveltejs/template svelte-demo\n</code></pre>\n<p>After getting all the boiler plate we run the following commands.</p>\n<pre><code class=\"language-bash\">User: ~/svelte$ npm install\r\nUser: ~/svelte$ npm run dev\n</code></pre>\n<h3>Basics</h3>\n<p>If anyone of you who knows VueJS can understand the basics of Svelte quite easily. I am not saying that they are same rather I am saying is that it quite simillar to how we build components in VueJS.</p>\n<pre><code class=\"language-jsx\">// Vue Components\r\n&#x3C;template>\r\n    //  HTML structure of the component\r\n&#x3C;/template>\r\n\r\n&#x3C;script>\r\n    // JavaScript code for the component\r\n&#x3C;/script>\r\n\r\n&#x3C;style>\r\n    // Styling for the components\r\n&#x3C;/style>\n</code></pre>\n<pre><code class=\"language-jsx\">// Svelte Components\r\n&#x3C;script>\r\n    // All of JS logic for the component\r\n&#x3C;/script>\r\n\r\n&#x3C;style>\r\n    // Styling for the component\r\n&#x3C;/style>\r\n\r\n&#x3C;div>\r\n    &#x3C;h1>HTML Structure Here!&#x3C;/h1>\r\n&#x3C;/div>\n</code></pre>\n<p>You see how they both are simillar in writing code for the components. In <code>script</code> tag at the top in Svelte component we write all the JS for the component, <code>style</code> tag for stying the component and below all we write HTML for the component.</p>\n<p>Now back to Svelte. When we clone the repo or <code>npx</code> it, there are three dirs that are present there. For now we only be working with <code>src</code> directory. In src dir, there are two files, <code>main.js</code> and <code>App.svelte</code>.</p>\n<p>In <code>main.js</code> file the component is being imported and is assigned to a new var <code>app</code> and is provided two arguments to it. first one is the target <code>document.body</code> which tells the compiler where it should be rendering. Second <code>props</code> which is simillar to <code>props</code> in React.</p>\n<p>In <code>App.svelte</code> we see a simillar structure as we see above. In <code>script</code> tag we are exporting a const <code>name</code> which we use in the <code>main > h1</code> tag and then in <code>style</code> the styling for the component. Start the <code>npm run dev</code> we see the following page in the browser.</p>\n<p><img src=\"/assets/images/day-107/svelte.jpg\" alt=\"Svelte\"></p>\n<h3>Building A Counter</h3>\n<p>For simple use case I will be building a simple counter with SvelteJS. This is what the <code>main.js</code> looks like now.</p>\n<pre><code class=\"language-js\">import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\n</code></pre>\n<p>And this is what the <code>App.svelte</code> looks like.</p>\n<pre><code class=\"language-jsx\">&#x3C;script>\r\n  let counter = 0;\r\n\r\n  function incrementCounter() {\r\n    counter += 1;\r\n  }\r\n&#x3C;/script>\r\n\r\n&#x3C;main>\r\n  &#x3C;h1>{counter}&#x3C;/h1>\r\n  &#x3C;button on:click={incrementCounter}>Increment&#x3C;/button>\r\n&#x3C;/main>\r\n\r\n&#x3C;style>\r\n  main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    color: black;\r\n    font-size: 4em;\r\n    font-weight: 600;\r\n  }\r\n&#x3C;/style>\r\n\n</code></pre>\n<p><img src=\"increment.jpg\" alt=\"Increment Button\"></p>\n<p>Now this is a simple example to show to build web apps with svelte and the post is already long enough so that it for today.</p>\n","tags":["JavaScript","FrontEnd","SvelteJS"]}},"__N_SSG":true}