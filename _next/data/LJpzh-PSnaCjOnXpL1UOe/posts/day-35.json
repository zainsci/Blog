{"pageProps":{"post":{"title":"Day 35 - File Management In Command-Line","date":"2021-02-04","slug":"day-35","content":"<p>This will be the fourth post in the Linux Series and It will be all about managing files and directories in the filesystem. This includes creating, deleting and modifying the files and moving them to other directories etc.</p>\n<h2>Managing files and directories</h2>\n<h3>rm - Remove a file or dir (directory)</h3>\n<p>This command allows the user to remove a file. You simply type rm with the filename as the argument and it will remove the file.</p>\n<pre><code class=\"language-shell\">root@User:/tmp$ ls\r\nfile\r\nroot@User:/tmp$ rm file\r\nroot@User:/tmp$ ls\n</code></pre>\n<p>Keep in mind that it will not ask you if you realy want to delete it or not so be careful with it. and it will not let you delete a directory even if that directory empty. You have to provide a flag or option <code>-R</code> before the dirname to remove it.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls\r\nold-dir\r\nroot@User:/tmp$ rm -R old-dir\r\nroot@User:/tmp$ ls\n</code></pre>\n<h3>cp - Copy a file or dir (directory)</h3>\n<p>This command allows the user to copy a file and directory from thr target to the destination. It is used like this. You type the <code>cp</code> command and type the file you want to copy as the first argument and the destination directory as the second argument and hit enter.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls\r\nfile   dir\r\nroot@User:/tmp$ cp file dir\r\nroot@User:/tmp$ cd dir\r\nroot@User:/tmp/dir$ ls\r\nfile\n</code></pre>\n<h3>mv - Move a file or dir</h3>\n<p>This command moves a file or dir to a new location that is provided as the second argyment. It works like this.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls\r\nsome-dir   file.txt\r\nroot@User:/tmp$ mv file.txt some-dir\r\nroot@User:/tmp$ ls\r\nsome-dir\r\nroot@User:/tmp$ cd some-dir\r\nroot@User:/tmp/some-dir$ ls\r\nfile.txt\n</code></pre>\n<p><code>mv</code> command can also be used to remane a file.</p>\n<pre><code class=\"language-bash\">root@User:/tmp/some-dir$ ls\r\nfile.txt\r\nroot@User:/tmp/some-dir$ mv file.txt new-name.txt\r\nroot@User:/tmp/some-dir$ ls\r\nnew-name.txt\n</code></pre>\n<h3>rmdir - Remove a dir</h3>\n<p><code>rm</code> command can delete a dir but you have to give it a <code>-R</code> flag and there is also a command that is more suitable for the task. <code>rmdir</code> command removes a dir only if its empty. It also ask for permission to delete a dir that contains even a single file.</p>\n<pre><code class=\"language-bash\">root@User:/tmp/some-dir$ ls\r\nempty-dir    not-empty-dir\r\nroot@User:/tmp/some-dir$ rmdir empty-dir\r\nroot@User:/tmp/some-dir$ ls\r\nnot-empty-dir\r\nroot@User:/tmp/some-dir$ rmdir not-empty-dir\r\nrmdir: failed to remove 'not-empty-dir': Directory not empty\n</code></pre>\n<p>Same goes for <code>rmdir</code> where you have to remove a dir with some files you have to provide <code>-r</code> option to remvoe it. But always be careful when working with directories.</p>\n<h2>Some more useful commands</h2>\n<p>Here are some more commands that will be useful as you work with the terminal.</p>\n<h3>Checking who is logged in with <strong>whoami</strong></h3>\n<p>it prints out the username of the currenty logged in user which in this case is <strong>root</strong>.</p>\n<pre><code class=\"language-bash\">root@User:/$ whoami\r\nroot\n</code></pre>\n<h3>Finding path to a binary</h3>\n<pre><code class=\"language-bash\">root@User:/$ whereis ls\r\nls: /usr/bin/ls /usr/share/man/man1/ls.1.gz\n</code></pre>\n<p>also</p>\n<p>Next post will be about finding file and performing searches and filtering using one of the most helpful and useful commands in linux, <code>grep</code>.</p>\n","tags":["Linux"]}},"__N_SSG":true}