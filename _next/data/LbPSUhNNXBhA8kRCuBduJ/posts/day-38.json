{"pageProps":{"post":{"title":"Day 38 - Groups and Group Permissions","date":"2021-02-07","slug":"day-38","content":"<p>This is the seventh post in the Linux Series and last time I wrote about the users and file persmissions etc and also a little about groups. This post will explain in details what are groups and also how we can change file permissions with <code>chmod</code> commdand.</p>\n<h2>What are Groups?</h2>\n<p>Groups in Linux is a way to organize users that have the same permissions on the filesystem. It is a collection of users that have the same permissions and is for security measures.</p>\n<p>The superuser or root user is part of the <code>root</code> group and has all the access on the operating system and admin privillages and if a new user is created and added in the root group that user will also have the same permissions as the root user. It can read, write or modify any file it want and can navigate to any directory. If a user from a group create a new file any other user of the same group can access that file and modify or write to it.</p>\n<p>List of all the groups and its member users are stored in the <code>/etc/group</code> file and you can see all the detials by running cat command with <code>/etc/group</code> as the first argument. Now on to creating groups and assigning users to it.</p>\n<h3>How to create groups?</h3>\n<p>To create a new group <code>addgroup</code> command id used.</p>\n<pre><code class=\"language-bash\">root@User:/$ addgroup linux-group\n</code></pre>\n<h3>To add users to the group</h3>\n<p>To add users to the newly created groups simply use the <code>usermod</code> command with following commands.</p>\n<pre><code class=\"language-bash\">root@User:/$ usermod -a -G new-group new-user\n</code></pre>\n<p>Here <code>usermod</code> is the command name <code>-a</code> is the flag for append to append a user to group <code>new-group</code> with <code>-G</code> as the flag and lastly the name of the user <code>new-user</code> or whatever the name of the user is.</p>\n<h3>To remove the user from the group</h3>\n<p>To remove the user from the group run the follwoing command.</p>\n<pre><code class=\"language-bash\">root@User:/$ gpasswd -d new-user new-group\r\nRemoving user new-user from group new-group\n</code></pre>\n<p><code>gpasswd -d</code> means delete the user from the group.</p>\n<h3>Permissions to the Group</h3>\n<p>The permissions to the groups are assigned and managed in the <code>visudo</code> file that the root user has access to. and to add permissions for the group and user to have access to certin commands we open the visudo file by just the filename in the command and edit the permissions.</p>\n<pre><code class=\"language-bash\">root@User:/$ visudo\r\n\r\n--- visudo file starts ---\r\n\r\n# User privilege specification\r\nroot    ALL=(ALL:ALL) ALL\r\n\r\n# Members of the admin group may gain root privileges\r\n%admin ALL=(ALL) ALL\r\n\r\n# Allow members of group sudo to execute any command\r\n%sudo   ALL=(ALL:ALL) ALL\r\n%new-group ALL=/usr/bin/ls\r\n# You type % sign and the name of the group\r\n# following ALL for all users and\r\n# the name of the commands the group\r\n# can have access to separated with\r\n# commas and must include the path to command\r\n\r\n--- visudo file ends ---\n</code></pre>\n<h2>File Permissiosn</h2>\n<p>Now I will navigate to the <code>/tmp</code> directory and run the following command.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls -l\r\ntotal 4\r\n-rw-r--r-- 1 root root    0 Feb  7 14:04 file.txt\r\ndrwxr-xr-x 5 root root 4096 Jan 19 00:10 tutorial\n</code></pre>\n<p><code>ls</code> command with list flag <code>-l</code> for list view with details about the files. Here you can see the first ten characters <code>-rw-r--r--</code> or <code>drwxr-xr-x</code> and both files have different characters in them. These are called file permissions and next post will be about modifying and chaging these permissions for users and groups.</p>\n","tags":["Linux"]}},"__N_SSG":true}