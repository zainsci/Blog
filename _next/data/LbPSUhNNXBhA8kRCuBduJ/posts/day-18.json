{"pageProps":{"post":{"title":"Day 18 - Monday, January 18, 2021","date":"2021-01-18","slug":"day-18","content":"<p>This is the third post on WebSecurity, First being on <a href=\"/day-16/\">XSS or Cross-Site Scripting</a>, Second on <a href=\"/day-17/\">SQL-Injection</a> and in this one I will answer the question on What is CSRF or Cross-Site Request Forgery.</p>\n<h3>So what is CSRF?</h3>\n<p>Cross-Site Request Forgery is a type of web-attack in which the user is tricked into submitting a form that they do not intend on a website to which they have privileged access to.</p>\n<p>Here is the difference between XSS and CSRF explained on <a href=\"https://en.wikipedia.org/wiki/Cross-site_request_forgery\">Wikipedia's Article on CSRF</a>: \"Unlike cross-site scripting (XSS), which exploits the trust a user has for a particular site, CSRF exploits the trust that a site has in a user's browser\"</p>\n<p>How does CSRF works? Consider a website <code>some-site.com</code>, you visit the website and signup for the account and the website will store the cookies related to you on your computer. Now everytime you perform some activity on that website the browser the automatically send the cookies stored by that website to its backend server with the request about the activity you made.</p>\n<p>After that you visit a another website, a bad website like <code>bad-site.com</code>, now this website will use your cookies stored by <code>some-site.com</code> and send the request to that <code>some-site.com</code>'s backend server which will authenticate that it is you after receiving the cookies containing your data, it will perform that action that the bad-site wanted to execute.</p>\n<p>Another example would be that you are authenticated on your bank's website and after that visits another website which can perform a CSRF attack. That site can then use cookies stored by your bank's site and can do stuff like transferring money from your account to another account etc. without you ever knowing what is happening. Some sites can even perform the attack after they are completely loaded.</p>\n<pre><code class=\"language-html\">&#x3C;body onload=\"document.getElementById('someForm').submit()\">\r\n  ...\r\n  &#x3C;form id=\"someForm\" action=\"http://yourbank.com/transfer_amt\" method=\"POST\">\r\n    &#x3C;input type=\"hidden\" name=\"account\" value=\"Name\" />\r\n    &#x3C;input type=\"hidden\" name=\"amount\" value=\"10000\" />\r\n  &#x3C;/form>\r\n&#x3C;/body>\n</code></pre>\n<p>What can be done to prevent CSRF atttacks?</p>\n<ol>\n<li>Using Same-Site Cookie Attribute for cookies</li>\n<li>Not using GET requests for state changing operations</li>\n<li>Check if the framerwork you are using have some kind of CSRF-Preventaiton already built into it and use it.</li>\n</ol>\n<h2>What I Learned Today</h2>\n<h3>💻 Programming</h3>\n<ul>\n<li>\n<p>CSRF - Cross-Site Request Forgery - Following are some sources about CSRF-attacks and preventions techniques from the web</p>\n<ul>\n<li><a href=\"https://youtu.be/KaEj_qZgiKY\">CSRF Introduction and what is the Same-Origin Policy? - web 0x04</a></li>\n<li><a href=\"https://youtu.be/vRBihr41JTo\">Cross Site Request Forgery - Computerphile</a></li>\n<li><a href=\"https://youtu.be/eWEgUcHPle0\">Cross-Site Request Forgery (CSRF) Explained</a></li>\n<li><a href=\"https://www.freecodecamp.org/news/web-security-hardening-http-cookies-be8d8d8016e1/\">Web Security: How to Harden your HTTP cookies</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\">Cross-Site Request Forgery Prevention Cheat Sheet</a></li>\n<li><a href=\"https://owasp.org/www-community/attacks/csrf\">Cross Site Request Forgery (CSRF)</a></li>\n</ul>\n</li>\n</ul>\n<h3>🗾 Langauge[<span lang=\"ja\">日本語</span>]</h3>\n<ul>\n<li><span lang=\"ja\"><strong>この辺</strong> (このへん)</span> Around Here. <span lang=\"ja\">辺</span>: Area.</li>\n<li><span lang=\"ja\"><strong>教室</strong> (きょうしつ)</span> ClassRoom. <span lan=\"ja\">教</span>: Teach, <span lan=\"ja\">室</span>: Room.</li>\n<li><span lang=\"ja\"><strong>自由</strong> (じゆう)</span> Freedom. <span lang=\"ja\">自</span>: Self, <span lang=\"ja\">由</span>: Wherefore.</li>\n<li><span lang=\"ja\"><strong>同時</strong></span> Same Time. <span lang=\"ja\">同</span>: Same, <span lang=\"ja\">時</span>: Time.</li>\n</ul>\n","tags":["Security","Web-Attacks","CSRF"]}},"__N_SSG":true}