{"pageProps":{"post":{"title":"Day 39 - File Permissions in Linux","date":"2021-02-08","slug":"day-39","content":"<p>This is the 8th post in the Linux Series and as I mentioned in the last post this post will be about the file permissions in the Linux FileSystem. The permissions are rights to access files or read, write or modify them and in Linux these permissions are allowed or not allowed by the <code>chmod</code> command and to to do this one must have the root access to modify the file permissions. Now to the command.</p>\n<h2>Permissions to Files</h2>\n<p><code>chmod</code> command short for change mode is used to change permissions of files and directories. First I will navigate to my <code>/tmp</code> directory and hit <code>ls</code> command with list <code>-l</code> flag and it will show the following output.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls -l\r\ntotal 4\r\n-rw-r--r-- 1 root root    0 Feb  7 14:04 file.txt\r\ndrwxr-xr-x 5 root root 4096 Jan 19 00:10 tutorial\n</code></pre>\n<p>Here the first ten character tell us about the file permission and who can have access to and what kind of access to the file. The first character fot the file type of if it is a directory and the next nine characters are a set of three characters.</p>\n<ul>\n<li><strong>d</strong> - the first character tells us if it is a directory or a file <code>-</code> if it is a file.</li>\n<li><strong>r</strong> - r for the access to read the file</li>\n<li><strong>w</strong> - w for the access to write to the file</li>\n<li><strong>x</strong> - x for the access to execute the file.</li>\n</ul>\n<p>The first three character in the nine permissions are the current logged in user and the second three are for the group the the third are for all the users.</p>\n<pre><code class=\"language-bash\">-rw-r--r-- 1 root root    0 Feb  7 14:04 file.txt\n</code></pre>\n<p>The first character <code>-</code> tells us that this is a file, next three characters <code>rw-</code> tells us that this user can read and write to this file but not execute the file, the next three characters <code>r--</code> tells us this group can only read the file but cannot write to it or execute. and the next three characters <code>r--</code> are also same for all the users.</p>\n<h2>Changing permissions with <strong>chmod</strong></h2>\n<p>To change the permissions to file for the users and groups we use <code>chmod</code> command. Now how to use the chmod command.</p>\n<pre><code class=\"language-bash\">root@User:/$ chmod [who]symbol[permissions] file\n</code></pre>\n<ul>\n<li><strong>who</strong> - user or the group being given the permissions\n<ul>\n<li><strong>u</strong> for the user</li>\n<li><strong>g</strong> for the group</li>\n<li><strong>o</strong> for the all the other users</li>\n<li><strong>a</strong> for all the users and groups</li>\n</ul>\n</li>\n<li>symbol - add or remove permissions\n<ul>\n<li><strong>+</strong> for appending to current permissions</li>\n<li><strong>-</strong> for removing from current permissions</li>\n<li><strong>=</strong> for setting permissions for all</li>\n</ul>\n</li>\n<li>permissions - the permissions to give</li>\n<li>file - file name</li>\n</ul>\n<p>Now modifying permissions for a file but first I remove all the permissions of the file by typing the commad <code>chmod a-rwx file.txt</code></p>\n<h3>Removing all the permissions</h3>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls -l\r\n-rw-r--r-- 1 root root    0 Feb  7 14:04 file.txt\r\nroot@User:/tmp$ chmod a-rwx file.txt\r\nroot@User:/tmp$ ls -l\r\n---------- 1 root root    0 Feb  7 14:04 file.txt\n</code></pre>\n<h3>Adding Permissions</h3>\n<p>For all the users using <code>a</code> with <code>+</code> for adding and <code>rx</code> for read and execute permissions.</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls -l\r\n---------- 1 root root    0 Feb  7 14:04 file.txt\r\nroot@User:/tmp$ chmod a+rx file.txt\r\nroot@User:/tmp$ ls -l\r\n-r-xr-xr-x 1 root root    0 Feb  7 14:04 file.txt\n</code></pre>\n<h3>Removing Permissions</h3>\n<p>For the group and other users only using <code>g</code> and <code>o</code> with <code>-</code> for removing and</p>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls -l\r\n-r-xr-xr-x 1 root root    0 Feb  7 14:04 file.txt\r\nroot@User:/tmp$ chmod g-x file.txt\r\nroot@User:/tmp$ ls -l\r\n-r-xr--r-x 1 root root    0 Feb  7 14:04 file.txt\n</code></pre>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls -l\r\n-r-xr--r-x 1 root root    0 Feb  7 14:04 file.txt\r\nroot@User:/tmp$ chmod o-x file.txt\r\nroot@User:/tmp$ ls -l\r\n-r-xr--r-- 1 root root    0 Feb  7 14:04 file.txt\n</code></pre>\n<h3>Setting Permissions For All</h3>\n<pre><code class=\"language-bash\">root@User:/tmp$ ls -l\r\n-r-xr--r-- 1 root root    0 Feb  7 14:04 file.txt\r\nroot@User:/tmp$ chmod a=r file.txt\r\nroot@User:/tmp$ ls -l\r\n-r--r--r-- 1 root root    0 Feb  7 14:04 file.txt\r\nroot@User:/tmp$ chmod a=x file.txt\r\nroot@User:/tmp$ ls -l\r\n---x--x--x 1 root root    0 Feb  7 14:04 file.txt\r\nroot@User:/tmp$ chmod a=rwx file.txt\r\nroot@User:/tmp$ ls -l\r\n-rwxrwxrwx 1 root root    0 Feb  7 14:04 file.txt\n</code></pre>\n","tags":["Linux"]}},"__N_SSG":true}