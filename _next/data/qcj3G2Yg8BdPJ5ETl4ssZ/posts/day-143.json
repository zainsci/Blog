{"pageProps":{"post":{"title":"Day 143","date":"2021-05-23","slug":"day-143","content":"<p>Now that we know about the basics and about the advance features of the styled-components we will be building a simple application with dark and light theme. I have setup an application using create-react-app and have deleted all the boilerplate code. All that remains in the src directory now is:</p>\n<ul>\n<li>App.js</li>\n<li>index.css</li>\n<li>index.js\r\nThis is what it looks like inside these files.</li>\n</ul>\n<pre><code class=\"language-jsx\">// index.js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(&#x3C;App />, document.getElementById(\"root\"));\n</code></pre>\n<pre><code class=\"language-css\">/* index.css */\r\n:root {\r\n  --light: #f6f8fa;\r\n  --dark: #24292e;\r\n  --text: #fff;\r\n  --blue: #0066ff;\r\n  --blue-dark: #2188ff;\r\n  --green: #28a745;\r\n  --green-dark: #34d058;\r\n}\n</code></pre>\n<p>and inside the App.js is all of our application. So I will be explaining it little by little.</p>\n<h2>Defining Light And Dark Theme</h2>\n<p>Inside the <code>App.js</code> file i created two variables that are assigned to an object containing theme properties. These two vars are:</p>\n<pre><code class=\"language-jsx\">const theme = {\r\n  background: \"var(--light)\",\r\n  text: \"var(--text)\",\r\n  primary: \"var(--blue)\",\r\n  secondary: \"var(--green)\",\r\n};\r\n\r\nconst darkTheme = {\r\n  background: \"var(--dark)\",\r\n  text: \"var(--text)\",\r\n  primary: \"var(--blue-dark)\",\r\n  secondary: \"var(--green-dark)\",\r\n};\n</code></pre>\n<p>These vars will inject css variables that we defined in the <code>index.css</code> file that we mentioned above.</p>\n<h2>Styling Main and Button</h2>\n<p>Below those two theme objects we define styles for two tag, <code>main</code> and <code>button</code>.</p>\n<pre><code class=\"language-jsx\">const Main = styled.main`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${props => props.theme.background};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem;\r\n  font-weight: 600;\r\n  border: 1px solid ${props =>\r\n      props.green ? props.theme.secondary : props.theme.primary};\r\n  background-color: ${props =>\r\n    props.green ? props.theme.secondary : props.theme.primary};\r\n  color: ${props => props.theme.text};\r\n`;\n</code></pre>\n<p>As you can see that these tags render background color and border color based on the theme color provided to them.</p>\n<h2>Theme</h2>\n<p>Now here comes the main part. We know render those components and will define the logic of our application and how we will render light and dark theme.</p>\n<p>Here first of all we use <code>useState</code> hook with the default value of <code>true</code>. This then later is used in the <code>ThemeProvider</code> to tell if to use the light theme variables or dark ones wether if the <code>isLight</code> variable true or not.</p>\n<pre><code class=\"language-jsx\">function App() {\r\n  const [isLight, setLight] = useState(true);\r\n\r\n  return (\r\n    &#x3C;ThemeProvider theme={isLight ? theme : darkTheme}>\r\n      &#x3C;Main className=\"App\">\r\n        &#x3C;Button onClick={() => setLight(!isLight)}>\r\n          {isLight ? \"Dark\" : \"Light\"}\r\n        &#x3C;/Button>\r\n        &#x3C;Button onClick={() => setLight(!isLight)} green>\r\n          {isLight ? \"Dark\" : \"Light\"}\r\n        &#x3C;/Button>\r\n      &#x3C;/Main>\r\n    &#x3C;/ThemeProvider>\r\n  );\r\n}\n</code></pre>\n<p>Down there are two button with one color blue and other green. These buttons are also rendering text inside them Button <code>Dark</code> if the <code>isLight</code> variable is true else it will render text <code>Light</code> inside the button. After all this it works like this.</p>\n<div style=\"display: flex; flex-direction: column; align-items: center;\">\n<p><img src=\"/blog/assets/images/day-143/theme.gif\" alt=\"Theme with Styled Components\"></p>\n</div>\n<p>Hope you learned something new. See you all next time.</p>\n"}},"__N_SSG":true}